version: "3"

networks:
  web:
    external: true
  internal:
    external: false

services:
  db:
    container_name: ${COMPOSE_PROJECT_NAME:-test}_tardis_bank_db
    image: ${DOCKER_USER}/db:${BUILD_VERSION}
    networks:
      - internal
    environment:
      POSTGRES_USER: ${TARDISBANK_DB_USER:-tardisbank_app}
      POSTGRES_PASSWORD: ${TARDISBANK_DB_PASSWORD:-password}
      POSTGRES_DB: ${TARDISBANK_DB_DATABASENAME:-tardisbank}
    expose:
      - "5432"
    labels:
      - traefik.enable=false

  api:
    container_name: ${COMPOSE_PROJECT_NAME:-test}_tardis_bank_api
    image: ${DOCKER_USER}/server:${BUILD_VERSION}
    networks:
      - internal
    environment:
      TARDISBANK_DB_CON: "Server=db;Port=5432;Database=${TARDISBANK_DB_DATABASENAME:-tardisbank};User Id=${TARDISBANK_DB_USER:-tardisbank_app};Password=${TARDISBANK_DB_PASSWORD:-password};"
      TARDISBANK_KEY: ${TARDISBANK_KEY:-secret-key}
      TARDISBANK_SMTP_SERVER: "mail:25:false"
      TARDISBANK_SMTP_CREDENTIALS: "${TARDISBANK_SMTP_CREDENTIALS:-username@example.com:password}"
      ASPNETCORE_ENVIRONMENT: "development"
    expose:
      - "80"
    depends_on:
      - db
    labels:
      - traefik.enable=false

  nginx:
    container_name: ${COMPOSE_PROJECT_NAME:-test}_tardis_bank_nginx
    image: ${DOCKER_USER}/nginx:${BUILD_VERSION}
    volumes:
      - static-content:/usr/share/nginx/html
    depends_on:
      - api
      - client
    networks:
      - internal
      - web

  client:
    container_name: ${COMPOSE_PROJECT_NAME:-test}_tardis_bank_static
    image: ${DOCKER_USER}/client:${BUILD_VERSION}
    command:
      - /bin/bash
      - -c
      - |
        rm -rf /content/*
        cp -a /app/build/. /content
        ls -lap /content
    environment:
      NODE_ENV: prod
    volumes:
      - static-content:/content
    labels:
      - traefik.enable=false

volumes:
  static-content:
